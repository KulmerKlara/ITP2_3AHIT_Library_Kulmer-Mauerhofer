@page "/login"
@using Library.Data
@inject UserRepository UserRepository
@inject AuthService AuthService

<link href="css/login.css" rel="stylesheet" />

<!-- 
    This component provides a login and sign-up interface.
    The page is split into two halves: 
    - The left side shows the sign-in form (blue background).
    - The right side shows the sign-up form (blue background) when toggled.
    State is managed with the 'showSignUp' boolean.
    Error messages are displayed for failed login or duplicate registration.
    On successful login, a welcome message and navigation button are shown.
-->

<div style="display: flex; height: 100vh;">

    <!-- Left: Sign In Form -->
    <div style="flex: 1; background-color: @(showSignUp ? "white" : "#ADD8E6"); display: flex; align-items: center; justify-content: center;">
        @if (!showSignUp)
        {
            <div style="background-color: rgb(255, 255, 255); padding: 30px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
                <div class="form-block login">
                    <h1>Sign in</h1>
                    @* Show error if login fails *@
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <p style="color: red">@errorMessage</p>
                    }
                    <div>
                        <input type="text" placeholder="Username or Email" @bind="signUpName" />
                    </div>
                    <br />
                    <div>
                        <input type="password" placeholder="Password" @bind="signUpPassword" required />
                    </div>
                    <br />
                    <button 
                        @onclick="SignIn"
                        style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;"
                        hidden="@(signInSuccess)">
                        Sign In
                    </button>

                    @if (signInSuccess)
                    {
                        <p style="color: green">Welcome @signUpName!</p>
                        <button 
                            @onclick="() => GoToOtherPage(UserRepository.GetUserByName(signUpName))"
                            style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; margin-top: 10px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;">
                            Go back to home
                        </button>
                    }

                    <!-- Move the button outside the form and place it in the right half, centered vertically and horizontally -->
                    
                    <!-- Centered Sign Up button in the right half when not showing sign up form -->
                    @if (!showSignUp)
                    {
                        <div style="position: absolute; right: 0; top: 0; width: 50vw; height: 100vh; display: flex; align-items: center; justify-content: center; pointer-events: none;">
                            <div style="pointer-events: auto;">
                                <button 
                                    @onclick="ToggleSignUp"
                                    style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 12px 32px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s; font-size: 1.2em;">
                                    Sign Up
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Right: Sign Up Form -->
    <div style="flex: 1; background-color: @(showSignUp ? "#ADD8E6" : "white"); display: flex; align-items: center; justify-content: center;">
        @if (showSignUp)
        { 
            <div style="background-color: rgb(255, 255, 255); padding: 30px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
                <div class="form-block signup">
                    <h1>Sign up</h1>
                    @* Show error if registration fails *@
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <p style="color: red">@errorMessage</p>
                    }
                    <div>
                        <input type="text" placeholder="Name" @bind="signUpName" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />
                    <div>
                        <input type="email" placeholder="Email" @bind="signUpEmail" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />
                    <div>
                        <input type="password" placeholder="Password" @bind="signUpPassword" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />
                    <div>
                        <input type="text" placeholder="Phone" @bind="signUpPhone" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />
                    <div><button 
                            @onclick="RegisterUser"
                            style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;">
                            Sign Up
                        </button>
                    </div>
                </div>
        </div>

        <!-- Centered Sign In button in the left half when showing sign up form -->
        @if (showSignUp)
        {
            <div style="position: absolute; left: 0; top: 0; width: 50vw; height: 100vh; display: flex; align-items: center; justify-content: center; pointer-events: none;">
                <div style="pointer-events: auto;">
                    <button 
                        @onclick="ToggleSignUp"
                        style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 12px 32px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s; font-size: 1.2em;">
                        Sign In
                    </button>
                </div>
            </div>
        }

        }
    </div>
</div>

@inject NavigationManager NavigationManager

@code {
    // State variables for toggling forms and storing user input
    private bool showSignUp = false;

    private string signUpName;
    private string signUpEmail;
    private string signUpPassword;
    private string signUpPhone;
    private string errorMessage;
    private bool signInSuccess = false;

    // Toggle between sign-in and sign-up forms
    private void ToggleSignUp()
    {
        showSignUp = !showSignUp;
        errorMessage = "";
    }

    // Register a new user if username is not taken
    private void RegisterUser()
    {
        var existingUser = UserRepository.GetUserByName(signUpName);
        if (existingUser != null)
        {
            errorMessage = "Benutzername ist bereits vergeben.";
            return;
        }

        var user = new User(0, signUpName, signUpEmail, signUpPassword, signUpPhone, "Customer");
        UserRepository.AddUser(user);
        errorMessage = "";
        showSignUp = false;
    }

    // Sign in if credentials are correct
    private void SignIn()
    {
        var user = UserRepository.GetUserByName(signUpName);
        if (user != null && user.Password == signUpPassword)
        {
            AuthService.SetUser(user); // Remember user
            signInSuccess = true;
            errorMessage = "";
        }
        else
        {
            signInSuccess = false;
            errorMessage = "Invalid username or password.";
        }
        
    }

    // Navigate to book list after successful login
    private void GoToOtherPage(User user)
    {
        if (user.Role == "Employee")
        {
            NavigationManager.NavigateTo("/employee");
        }
        else if (user.Role == "Customer")
        {
            NavigationManager.NavigateTo("/booklist");
        }
        if (user.Role == "Employee" || user.Role == "Customer")
        {
            NavigationManager.NavigateTo("/");
        }
    }
}