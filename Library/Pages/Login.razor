@page "/login"                       
@using Library.Data                 
@inject UserRepository UserRepository  
@inject AuthService AuthService        

<!-- Einbindung der zugehörigen CSS-Datei für das Login-Design -->
<link href="css/login.css" rel="stylesheet" />

<!-- 
    Diese Seite bietet eine Login- und Registrierungsansicht.
    Layout: Zwei Spalten:
    - Linke Seite: Login
    - Rechte Seite: Registrierung
    Umschaltlogik wird mit showSignUp gesteuert.
-->

<div style="display: flex; height: 100vh;">

    <!-- Linke Hälfte: Login -->
    <div style="flex: 1; background-color: @(showSignUp ? "white" : "#ADD8E6"); display: flex; align-items: center; justify-content: center;">
        @if (!showSignUp)
        {
            <!-- Login-Formular -->
            <div style="background-color: rgb(255, 255, 255); padding: 30px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
                <div class="form-block login">
                    <h1>Sign in</h1>

                    @* Fehleranzeige bei falschen Login-Daten *@
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <p style="color: red">@errorMessage</p>
                    }

                    <!-- Benutzername oder E-Mail -->
                    <div>
                        <input type="text" placeholder="Username or Email" @bind="signUpName" />
                    </div>
                    <br />

                    <!-- Passwort -->
                    <div>
                        <input type="password" placeholder="Password" @bind="signUpPassword" required />
                    </div>
                    <br />

                    <!-- Login-Button, versteckt wenn Login erfolgreich war -->
                    <button 
                        @onclick="SignIn"
                        style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;"
                        hidden="@(signInSuccess)">
                        Sign In
                    </button>

                    <!-- Erfolgsmeldung + Weiterleitung bei Erfolg -->
                    @if (signInSuccess)
                    {
                        <p style="color: green">Welcome @signUpName!</p>
                        <button 
                            @onclick="() => GoToOtherPage(UserRepository.GetUserByName(signUpName))"
                            style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; margin-top: 10px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;">
                            Go back to home
                        </button>
                    }

                    <!-- Button zum Wechseln zur Registrierungsansicht -->
                    @if (!showSignUp)
                    {
                        <div style="position: absolute; right: 0; top: 0; width: 50vw; height: 100vh; display: flex; align-items: center; justify-content: center; pointer-events: none;">
                            <div style="pointer-events: auto;">
                                <button 
                                    @onclick="ToggleSignUp"
                                    style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 12px 32px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s; font-size: 1.2em;">
                                    Sign Up
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Rechte Hälfte: Registrierung -->
    <div style="flex: 1; background-color: @(showSignUp ? "#ADD8E6" : "white"); display: flex; align-items: center; justify-content: center;">
        @if (showSignUp)
        { 
            <!-- Registrierungsformular -->
            <div style="background-color: rgb(255, 255, 255); padding: 30px; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.08);">
                <div class="form-block signup">
                    <h1>Sign up</h1>

                    @* Fehleranzeige bei doppeltem Benutzernamen *@
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <p style="color: red">@errorMessage</p>
                    }

                    <!-- Name -->
                    <div>
                        <input type="text" placeholder="Name" @bind="signUpName" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />

                    <!-- E-Mail -->
                    <div>
                        <input type="email" placeholder="Email" @bind="signUpEmail" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />

                    <!-- Passwort -->
                    <div>
                        <input type="password" placeholder="Password" @bind="signUpPassword" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />

                    <!-- Telefonnummer -->
                    <div>
                        <input type="text" placeholder="Phone" @bind="signUpPhone" style="border-radius: 8px; border: 1px solid #ccc; padding: 8px;" />
                    </div>
                    <br />

                    <!-- Registrierung abschließen -->
                    <div>
                        <button 
                            @onclick="RegisterUser"
                            style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 8px 20px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s;">
                            Sign Up
                        </button>
                    </div>
                </div>
            </div>

            <!-- Button zum Wechseln zur Login-Ansicht -->
            <div style="position: absolute; left: 0; top: 0; width: 50vw; height: 100vh; display: flex; align-items: center; justify-content: center; pointer-events: none;">
                <div style="pointer-events: auto;">
                    <button 
                        @onclick="ToggleSignUp"
                        style="background-color: #e0e0e0; color: #333; border: none; border-radius: 8px; padding: 12px 32px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.06); transition: background 0.2s; font-size: 1.2em;">
                        Sign In
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Ermöglicht Navigation zu anderen Seiten -->
@inject NavigationManager NavigationManager

@code {
    // Zustand für die Anzeige der Registrierungsseite
    private bool showSignUp = false;

    // Eingabewerte für Login und Registrierung
    private string signUpName;
    private string signUpEmail;
    private string signUpPassword;
    private string signUpPhone;

    // Status- und Fehlermeldungen
    private string errorMessage;
    private bool signInSuccess = false;

    // Umschalten zwischen SignIn- und SignUp-Ansicht
    private void ToggleSignUp()
    {
        showSignUp = !showSignUp;
        errorMessage = "";
    }

    // Registrierung eines neuen Nutzers
    private void RegisterUser()
    {
        var existingUser = UserRepository.GetUserByName(signUpName);
        if (existingUser != null)
        {
            errorMessage = "Benutzername ist bereits vergeben.";
            return;
        }

        var user = new User(0, signUpName, signUpEmail, signUpPassword, signUpPhone, "Customer");
        UserRepository.AddUser(user);
        errorMessage = "";
        showSignUp = false;
    }

    // Anmeldung eines bestehenden Nutzers
    private void SignIn()
    {
        var user = UserRepository.GetUserByName(signUpName);
        if (user != null && user.Password == signUpPassword)
        {
            AuthService.SetUser(user); // Nutzer merken
            signInSuccess = true;
            errorMessage = "";
        }
        else
        {
            signInSuccess = false;
            errorMessage = "Invalid username or password.";
        }
    }

    // Weiterleitung nach erfolgreichem Login je nach Benutzerrolle
    private void GoToOtherPage(User user)
    {
        if (user.Role == "Employee")
        {
            NavigationManager.NavigateTo("/employee");
        }
        else if (user.Role == "Customer")
        {
            NavigationManager.NavigateTo("/booklist");
        }
        if (user.Role == "Employee" || user.Role == "Customer")
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
