@page "/employee"
@using Library.Data
@inject UserRepository UserRepository
@inject AuthService AuthService
@inject BookRepository BookRepository

<div class="page-wrapper" style="margin-left:70px;">
    <h3>Alle Bücher in der Bibliothek</h3>

    <button class="plus-button" @onclick="ShowPlusModal">+</button>
    <button class="minus-button" @onclick="ShowMinusModal">-</button>

    @if (books == null)
    {
        <p>Lade Bücher...</p>
    }
    else if (books.Count == 0)
    {
        <p>Keine Bücher gefunden.</p>
    }
    else
    {
        <div class="book-grid">
            @foreach (var book in books)
            {
                <div class="book-card">
                    <div class="book-image-placeholder"></div>
                    <div class="title-placeholder">@book.Title</div>
                </div>
            }
        </div>
    }

    @* Minus Modal *@
    @if (isMinusModalVisible)
    {
        <div class="modal-backdrop" @onclick="HideMinusModal">
            <div class="modal-content" @onclick:stopPropagation>
                <h2>Minus-Modal</h2>
                <p>Dies ist das Minus-Fenster.</p>
                <button @onclick="HideMinusModal">Schließen</button>
            </div>
        </div>
    }

    @* Plus Modal mit Formular *@
    @if (isPlusModalVisible)
    {
        <div class="modal-backdrop" @onclick="HidePlusModal">
            <div class="modal-content" @onclick:stopPropagation>
                <h2>Neues Buch hinzufügen</h2>
                <EditForm Model="newBook" OnValidSubmit="AddBook">
                    <div>
                        <label>Titel:</label><br />
                        <InputText @bind-Value="newBook.Title" class="input-field" />
                    </div>
                    <div>
                        <label>Autor:</label><br />
                        <InputText @bind-Value="newBook.Author" class="input-field" />
                    </div>
                    <div>
                        <label>Genre:</label><br />
                        <InputText @bind-Value="newBook.Genre" class="input-field" />
                    </div>
                    <div>
                        <label>Zusammenfassung:</label><br />
                        <InputTextArea @bind-Value="newBook.Summary" class="input-field" />
                    </div>
                    <div>
                        <label>Verfügbar:</label>
                        <InputCheckbox @bind-Value="newBook.IsAvailable" />
                    </div>
                    <br />
                    <button type="submit">Hinzufügen</button>
                    <button type="button" @onclick="HidePlusModal">Abbrechen</button>
                </EditForm>
            </div>
        </div>
    }
</div>

@code {
    private List<Book> books;
    private bool isMinusModalVisible = false;
    private bool isPlusModalVisible = false;

    // Temporäres Buchmodell fürs Formular
    private Book newBook = new Book(0, "", "", "", "", true);

    protected override void OnInitialized()
    {
        books = BookRepository.GetAllBooks();
    }

    private void ShowMinusModal() => isMinusModalVisible = true;
    private void HideMinusModal() => isMinusModalVisible = false;

    private void ShowPlusModal()
    {
        newBook = new Book(0, "", "", "", "", true);
        isPlusModalVisible = true;
    }

    private void HidePlusModal() => isPlusModalVisible = false;

    private void AddBook()
    {
        BookRepository.AddBook(newBook);
        books = BookRepository.GetAllBooks(); // Neu laden, um BookId mitzunehmen
        HidePlusModal();
    }
}
