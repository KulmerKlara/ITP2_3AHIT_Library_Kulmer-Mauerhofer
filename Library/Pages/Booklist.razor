@page "/booklist"
@using Library.Data
@inject AuthService AuthService
@inject UserBookListRepository UserBookListRepository

<PageTitle>Your Book List</PageTitle>

@if (!AuthService.IsAuthenticated)
{
    <p>Please <a href="/login">log in</a> to see your book list.</p>
}
else
{
    <h1>Your Book List, @AuthService.LoggedInUser.Name</h1>

    @if (books == null)
    {
        <p>Loading your books...</p>
    }
    else if (books.Count == 0)
    {
        <p>Your list is empty.</p>
    }
    else
    {
        <div class="book-grid">
            @foreach (var book in books)
            {
                <div class="book-card" @onclick="() => ShowBookDetails(book)">
                    <div class="book-image-placeholder">
                        Bild kommt hier hin
                    </div>
                    <div class="book-title-container">
                        <div class="book-title">@book.Title</div>
                    </div>
                </div>
            }
        </div>
    }
}

@if (showDetails && selectedBook != null)
{
    <div class="modal-overlay" @onclick="CloseDetails">
        <div class="modal-content" @onclick:stopPropagation>
            <button class="close-btn" @onclick="CloseDetails">×</button>

            <h2>@selectedBook.Title</h2>
            <p><strong>Autor:</strong> @selectedBook.Author</p>
            <p><strong>Zusammenfassung:</strong> @selectedBook.Summary</p>
            <p><strong>Rückgabedatum:</strong> @(selectedBook.GiveBackDate?.ToString("dd.MM.yyyy") ?? "Keine Angabe")</p>
            <button class="remove-btn" @onclick="() => RemoveFromList(selectedBook.BookId)">Remove from List</button>
        </div>
    </div>
}

@code {
    private List<Book> books;

    private bool showDetails = false;
    private Book selectedBook;

    protected override void OnInitialized()
    {
        if (AuthService.IsAuthenticated)
        {
            books = UserBookListRepository.GetUserBookList(AuthService.LoggedInUser.Id);
        }
    }

    private void ShowBookDetails(Book book)
    {
        selectedBook = book;
        showDetails = true;
    }

    private void CloseDetails()
    {
        showDetails = false;
        selectedBook = null;
    }

    private void RemoveFromList(int bookId)
    {
        UserBookListRepository.RemoveBookFromUserList(AuthService.LoggedInUser.Id, bookId);
        books = UserBookListRepository.GetUserBookList(AuthService.LoggedInUser.Id);
        StateHasChanged();
    }
}
