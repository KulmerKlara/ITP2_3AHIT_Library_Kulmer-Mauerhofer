@page "/booklist"
@using Library.Data
@inject AuthService AuthService
@inject UserBookListRepository UserBookListRepository

<PageTitle>Your Book List</PageTitle>

@if (!AuthService.IsAuthenticated)
{
    <p>Please <a href="/login">log in</a> to see your book list.</p>
}
else
{
    <h1>Your Book List, @AuthService.LoggedInUser.Name</h1>

    @if (books == null)
    {
        <p>Loading your books...</p>
    }
    else if (books.Count == 0)
    {
        <p>Your list is empty.</p>
    }
    else
    {
        <ul>
            @foreach (var book in books)
            {
                <li>
                    <strong>@book.Title</strong> by @book.Author<br />
                    Genre: @book.Genre<br />
                    @book.Summary<br />
                    <button @onclick="() => RemoveFromList(book.BookId)">Remove</button>
                </li>
            }
        </ul>
    }
}

@code {
    private List<Book> books;

    protected override void OnInitialized()
    {
        if (AuthService.IsAuthenticated)
        {
            books = UserBookListRepository.GetUserBookList(AuthService.LoggedInUser.Id);
        }
    }

    private void RemoveFromList(int bookId)
    {
        UserBookListRepository.RemoveBookFromUserList(AuthService.LoggedInUser.Id, bookId);
        books = UserBookListRepository.GetUserBookList(AuthService.LoggedInUser.Id);
        StateHasChanged();
    }
}
