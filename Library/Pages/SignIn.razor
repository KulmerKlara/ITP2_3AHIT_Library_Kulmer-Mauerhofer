@page "/signin"
@using Library.Data
@inject UserRepository UserRepository

<PageTitle>BestReads - Sign in</PageTitle>

<div class="login-container">
    <div class="login-form">
        <h2>Sign in</h2>
        <hr />

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert alert-danger">@Message</div>
        }

        <EditForm Model="@newUser" OnValidSubmit="@RegisterUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Username</label>
                <input type="text" class="form-control" @bind="newUser.Name" required />
            </div>

            <div class="form-group">
                <label>E-mail-addres</label>
                <input type="email" class="form-control" @bind="newUser.Email" required />
            </div>

            <div class="form-group">
                <label>Password</label>
                <input type="password" class="form-control" @bind="newUser.Password" required />
            </div>

            <div class="form-group">
                <label>Phonenumber (optional)</label>
                <input type="text" class="form-control" @bind="newUser.Phone" />
            </div>

            <button type="submit" class="btn btn-primary btn-block">Registrieren</button>
        </EditForm>
    </div>
</div>

@code {
    private User newUser = new User(0, "", "", "", "", "Customer");
    private string Message;

    private void RegisterUser()
    {
        newUser.Role = "Customer";
        var existing = UserRepository.GetUserByEmail(newUser.Email);
        if (existing != null)
        {
            Message = "This e-mail is already used.";
            return;
        }

        UserRepository.AddUser(newUser);
        Message = "Registration sucessful!";
    }
}
