@page "/"
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Library.Shared

<!-- Setzt den Seitentitel für den Browser-Tab -->
<PageTitle>Index</PageTitle>

<!-- Hauptcontainer mit Hintergrundbild und Overlay -->
<div class="background-container">
    <div class="overlay">
        <h1>Welcome to your ONLINE BOOKSHELF</h1>

        <!-- Suchleiste mit eingebautem "X" zum Leeren der Eingabe -->
        <div class="search-wrapper">
            <div class="search-bar" style="position: relative;">
                <!-- Suchfeld mit Zwei-Wege-Bindung und Enter-Handling -->
                <input type="search"
                    placeholder="Search by title, author or genre"
                    @bind="searchQuery"
                    @onkeydown="HandleKeyDown"
                    style="padding-right: 24px;" />

                <!-- "X"-Icon, um das Suchfeld zu leeren (immer sichtbar) -->
                <span class="icon"
                    style="position: absolute; right: 8px; top: 50%; transform: translateY(-50%); cursor: pointer;"
                    @onclick="ClearSearch">
                    &#10006;
                </span>
            </div>
        </div>

        <!-- Karussell zur Anzeige von Buchgenres -->
        <div class="book-carousel">
            <!-- Linker Pfeil zum Zurückblättern -->
            <div class="arrow left-arrow" @onclick="MoveLeft">&#10094;</div>

            @* Erstellt eine Liste der Genres aus dem Dictionary *@
            @{
                var genreList = genreImages.Keys.ToList();
            }

            @* Zeigt `itemsPerPage` viele Genre-Kacheln im Karussell an *@
            @for (int i = currentIndex; i < currentIndex + itemsPerPage && i < genreList.Count; i++)
            {
                var genre = genreList[i];
                <div class="book-preview-item" @onclick="() => NavigateToGenrePage(genre)">
                    <img src="@genreImages[genre]" alt="@genre" class="book-image-placeholder" />
                    <div class="genre-label">@genre</div>
                </div>
            }

            <!-- Rechter Pfeil zum Weiterblättern -->
            <div class="arrow right-arrow" @onclick="MoveRight">&#10095;</div>
        </div>

        <!-- Optionaler SurveyPrompt -->
        <SurveyPrompt Title="How is Blazor working for you?" />
    </div>
</div>

<!-- C# Code-Block mit Logik für das UI -->
@code {
    private int currentIndex = 0;                // Aktueller Index im Karussell
    private const int itemsPerPage = 3;          // Anzahl der sichtbaren Genres gleichzeitig
    private string searchQuery = string.Empty;   // Gebundener Suchtext

    // Dictionary mit Genres als Schlüssel und Bildpfaden als Werte
    private Dictionary<string, string> genreImages = new()
    {
        { "Romane", "/images/1_Romane.png" },
        { "Krimis", "/images/2_Krimis.png" },
        { "Thriller", "/images/3_Thriller.png" },
        { "Fantasy", "/images/4_Fantasy.png" },
        { "Science Fiction", "/images/5_ScienceFiction.png" },
        { "Horror", "/images/6_Horror.png" },
        { "Reise", "/images/7_Reise.png" },
        { "Jugendbuch", "/images/8_Jugendbuch.png" },
        { "Kinderbuch", "/images/9_Kinderbuch.png" },
        { "Sachbuch", "/images/10_Sachbuch.jpg" }
    };

    // Blättert im Karussell nach links
    private void MoveLeft()
    {
        if (currentIndex > 0) currentIndex--;
    }

    // Blättert im Karussell nach rechts
    private void MoveRight()
    {
        if (currentIndex < genreImages.Count - itemsPerPage) currentIndex++;
    }

    // Navigiert zur Genre-spezifischen Seite
    private void NavigateToGenrePage(string genre)
    {
        NavigationManager.NavigateTo($"/genrespage/{Uri.EscapeDataString(genre)}");
    }

    // Leert das Suchfeld
    private void ClearSearch()
    {
        searchQuery = string.Empty;
    }

    // Behandelt die Enter-Taste für die Suche
    private void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !string.IsNullOrWhiteSpace(searchQuery))
        {
            NavigationManager.NavigateTo($"/SearchBarResults/{Uri.EscapeDataString(searchQuery)}");
        }
    }
}
